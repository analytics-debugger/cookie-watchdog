{"version":3,"file":"cookie-watchdog.cjs.js","sources":["../src/index.js"],"sourcesContent":["const CookieWatchdog = {\r\n    // Internal state: Maps to store cookies and respective callbacks\r\n    watchers: new Map(),\r\n\r\n    // Internal: Check for cookieStore API support in the current environment\r\n    checkCookieStoreApi() {\r\n        if (typeof window === 'undefined' || !(\"cookieStore\" in window)) {\r\n            console.error(\"cookieStore API is not supported in this browser.\");\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    },\r\n\r\n    // Internal: Get the value of a specific cookie\r\n    getCookie(name) {\r\n        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\r\n        return match ? decodeURIComponent(match[2]) : null;\r\n    },\r\n\r\n    watch(cookieName, callback, options = { untilReady: false }) {\r\n        const listener = (event) => {\r\n            const filteredChanges = event.changed.filter(cookie => this.watchers.has(cookie.name));\r\n            const filteredDeletions = event.deleted.filter(cookie => this.watchers.has(cookie.name));\r\n            if (filteredChanges.length > 0) {\r\n                filteredChanges.forEach(change => {\r\n                    const currentValue = this.watchers.get(change.name);\r\n                    const actionType = currentValue.value === change.value ? 'unchanged' : (currentValue.value === null ? 'created' : 'updated');\r\n\r\n                    callback({\r\n                        name: change.name,\r\n                        value: change.value,\r\n                        type: actionType\r\n                    });\r\n\r\n                    if (currentValue.options?.untilReady && actionType === \"created\") {\r\n                        this.unwatch(change.name);\r\n                    }\r\n\r\n                    currentValue.value = change.value;\r\n                    this.watchers.set(change.name, currentValue);\r\n                });\r\n            }\r\n            if (filteredDeletions.length > 0) {\r\n                filteredDeletions.forEach(change => {\r\n                    const currentValue = this.watchers.get(change.name);\r\n                    currentValue.value = null;\r\n                    callback({\r\n                        name: change.name,\r\n                        value: change.value,\r\n                        type: 'deleted'\r\n                    });\r\n                    this.watchers.set(change.name, currentValue);\r\n                });\r\n            }\r\n        };\r\n        if (typeof window === 'undefined') {\r\n            throw new Error('This needs to run in a browser.');\r\n        }\r\n\r\n        if (typeof callback !== 'function') {\r\n            throw new Error(`The callback for ${cookieName} must be a function.`);\r\n        }\r\n\r\n        if (!this.checkCookieStoreApi()) {\r\n            throw new Error('cookieStore API not available');\r\n        }\r\n\r\n        // Save listener function as a property of CookieWatchdog to reference it later\r\n        this.listener = listener;\r\n\r\n        // Add global listener if it's the first watcher\r\n        if (this.watchers.size === 0) {\r\n            console.log('ADD GLOBAL LISTENER');\r\n            window.cookieStore.addEventListener('change', this.listener);\r\n        }\r\n\r\n        const watcherPointer = this.watchers.get(cookieName);\r\n\r\n        if (watcherPointer) {\r\n            throw new Error(`A listener already exists for the cookie: ${cookieName}`);\r\n        } else {\r\n            console.log(arguments);\r\n            const currentCookieValue = this.getCookie(cookieName);\r\n            this.watchers.set(cookieName, {\r\n                value: currentCookieValue,\r\n                callback: callback,\r\n                options: options\r\n            });\r\n\r\n            callback({\r\n                name: cookieName,\r\n                value: currentCookieValue,\r\n                type: currentCookieValue !== null ? 'existing' : 'missing',\r\n            });\r\n\r\n            if (currentCookieValue !== null && options?.untilReady) {\r\n                this.unwatch(cookieName);\r\n            }\r\n        }\r\n    },\r\n\r\n    // Public: Stop watching a specific cookie\r\n    unwatch(cookieName) {\r\n        if (typeof window === 'undefined') return;\r\n\r\n        if (this.watchers.has(cookieName)) {\r\n            console.log(\"REMOVING LISTENER FOR COOKIE\", cookieName);\r\n            this.watchers.delete(cookieName);\r\n\r\n            if (this.watchers.size === 0) {\r\n                console.log(\"REMOVE GLOBAL LISTENER \");\r\n                window.cookieStore.removeEventListener(\"change\", this.listener);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// Expose the public methods for external use\r\nexport default {\r\n    watch: CookieWatchdog.watch.bind(CookieWatchdog),\r\n    unwatch: CookieWatchdog.unwatch.bind(CookieWatchdog)\r\n};\r\n"],"names":["CookieWatchdog","watchers","Map","checkCookieStoreApi","window","console","error","getCookie","name","match","document","cookie","RegExp","decodeURIComponent","watch","cookieName","callback","options","arguments","length","undefined","untilReady","listener","event","filteredChanges","changed","filter","has","filteredDeletions","deleted","forEach","change","currentValue","get","actionType","value","type","unwatch","set","Error","size","log","cookieStore","addEventListener","watcherPointer","currentCookieValue","delete","removeEventListener","bind"],"mappings":"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"}