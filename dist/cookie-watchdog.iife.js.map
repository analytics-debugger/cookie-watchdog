{"version":3,"file":"cookie-watchdog.iife.js","sources":["../src/index.js"],"sourcesContent":["const CookieWatchdog = {\r\n    // Internal state: Maps to store cookies and respective callbacks\r\n    watchers: new Map(),\r\n\r\n    // Internal: Check for cookieStore API support in the current environment\r\n    checkCookieStoreApi() {\r\n        if (typeof window === 'undefined' || !(\"cookieStore\" in window)) {\r\n            console.error(\"cookieStore API is not supported in this browser.\");\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    },\r\n\r\n    // Internal: Get the value of a specific cookie\r\n    getCookie(name) {\r\n        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\r\n        return match ? decodeURIComponent(match[2]) : null;\r\n    },\r\n\r\n    watch(cookieName, callback, options = { untilReady: false }) {\r\n        const listener = (event) => {\r\n            const filteredChanges = event.changed.filter(cookie => this.watchers.has(cookie.name));\r\n            const filteredDeletions = event.deleted.filter(cookie => this.watchers.has(cookie.name));\r\n            if (filteredChanges.length > 0) {\r\n                filteredChanges.forEach(change => {\r\n                    const currentValue = this.watchers.get(change.name);\r\n                    const actionType = currentValue.value === change.value ? 'unchanged' : (currentValue.value === null ? 'created' : 'updated');\r\n\r\n                    callback({\r\n                        name: change.name,\r\n                        value: change.value,\r\n                        type: actionType\r\n                    });\r\n\r\n                    if (currentValue.options?.untilReady && actionType === \"created\") {\r\n                        this.unwatch(change.name);\r\n                    }\r\n\r\n                    currentValue.value = change.value;\r\n                    this.watchers.set(change.name, currentValue);\r\n                });\r\n            }\r\n            if (filteredDeletions.length > 0) {\r\n                filteredDeletions.forEach(change => {\r\n                    const currentValue = this.watchers.get(change.name);\r\n                    currentValue.value = null;\r\n                    callback({\r\n                        name: change.name,\r\n                        value: change.value,\r\n                        type: 'deleted'\r\n                    });\r\n                    this.watchers.set(change.name, currentValue);\r\n                });\r\n            }\r\n        };\r\n        if (typeof window === 'undefined') {\r\n            throw new Error('This needs to run in a browser.');\r\n        }\r\n\r\n        if (typeof callback !== 'function') {\r\n            throw new Error(`The callback for ${cookieName} must be a function.`);\r\n        }\r\n\r\n        if (!this.checkCookieStoreApi()) {\r\n            throw new Error('cookieStore API not available');\r\n        }\r\n\r\n        // Save listener function as a property of CookieWatchdog to reference it later\r\n        this.listener = listener;\r\n\r\n        // Add global listener if it's the first watcher\r\n        if (this.watchers.size === 0) {\r\n            window.cookieStore.addEventListener('change', this.listener);\r\n        }\r\n\r\n        const watcherPointer = this.watchers.get(cookieName);\r\n\r\n        if (watcherPointer) {\r\n            throw new Error(`A listener already exists for the cookie: ${cookieName}`);\r\n        } else {\r\n            const currentCookieValue = this.getCookie(cookieName);\r\n            this.watchers.set(cookieName, {\r\n                value: currentCookieValue,\r\n                callback: callback,\r\n                options: options\r\n            });\r\n\r\n            callback({\r\n                name: cookieName,\r\n                value: currentCookieValue,\r\n                type: currentCookieValue !== null ? 'existing' : 'missing',\r\n            });\r\n\r\n            if (currentCookieValue !== null && options?.untilReady) {\r\n                this.unwatch(cookieName);\r\n            }\r\n        }\r\n    },\r\n\r\n    // Public: Stop watching a specific cookie\r\n    unwatch(cookieName) {\r\n        if (typeof window === 'undefined') return;\r\n\r\n        if (this.watchers.has(cookieName)) {\r\n            console.log(\"REMOVING LISTENER FOR COOKIE\", cookieName);\r\n            this.watchers.delete(cookieName);\r\n\r\n            if (this.watchers.size === 0) {\r\n                console.log(\"REMOVE GLOBAL LISTENER \");\r\n                window.cookieStore.removeEventListener(\"change\", this.listener);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// Expose the public methods for external use\r\nexport default {\r\n    watch: CookieWatchdog.watch.bind(CookieWatchdog),\r\n    unwatch: CookieWatchdog.unwatch.bind(CookieWatchdog)\r\n};\r\n"],"names":["CookieWatchdog","watchers","Map","checkCookieStoreApi","window","console","error","getCookie","name","match","document","cookie","RegExp","decodeURIComponent","watch","cookieName","callback","options","arguments","length","undefined","untilReady","listener","event","filteredChanges","changed","filter","has","filteredDeletions","deleted","forEach","change","currentValue","get","actionType","value","type","unwatch","set","Error","size","cookieStore","addEventListener","watcherPointer","currentCookieValue","log","delete","removeEventListener","bind"],"mappings":"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"}